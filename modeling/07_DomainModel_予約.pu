@startuml DomainModel

package スタジオ {
    class スタジオ {
        スタジオID
    }

    enum スタート時間区分 {
        0分スタート
        30分スタート
    }

    スタジオ o-- "1" スタート時間区分
}

package 機材 {
    class 機材 {
        機材ID
    }

    class 機材在庫数

    機材 o-- "1" 機材在庫数
}

package 予約 {
    class 予約 {
        予約ID
    }

    class 利用時間 {
        開始日時
        利用時間数
    }

    class 利用者情報
    class 利用者名
    class 利用者電話番号
    利用者情報 o-- "1" 利用者名
    利用者情報 o-- "1" 利用者電話番号

    class 利用人数

    enum 練習区分 {
        バンド練習
        個人練習
    }

    class 利用機材
    class 利用機材数量
    利用機材 --> 機材
    利用機材 o-- "1" 利用機材数量

    予約 --> "1" 店舗
    予約 --> "1" スタジオ
    予約 o-- "1" 利用時間
    予約 o-- "1" 利用者情報
    予約 o-- "1" 利用人数
    予約 o-- "1" 練習区分
    予約 o-- "0..*" 利用機材

    note top of 予約
    ■ルール
    * 同じ日時に同じスタジオを複数予約できない。
    * 同じ利用する時間帯に利用する機材の余がない場合は予約できない。

    ■予約の状態に関するルール
    * 利用上限人数・・・練習区分ごとに決まる。（個人練習は 2 人。バンド練習は上限なし。）
    * スタート時間・・・スタジオごとに決まる。（0 分スタート or 30 分スタート
    * 予約受付開始日時・・・練習区分ごとに決まる。（個人練習は前日 21 時から。バンド練習は 2 ヶ月前から。）
    * 利用可能時間・・・店舗ごとに決まる。（営業時間内。24 時間営業もあり。）  

    ■排他
    * テーブルロックが必要
    ** 予約の重複を排除する必要があるため。
    * 楽観的排他は行わない
    ** 予約を複数端末で同時に操作することは考えづらいため後勝ちで良いとする。
    end note
}

package 店舗 {
    class 店舗 {
    }

    class 営業時間 {
        開始時間
        終了時間
    }
    
    class 利用上限人数
    class 予約受付開始日時 {
        日前
        時
    }

    店舗 o-- "1" 営業時間
    店舗 o-- "2" 予約受付開始日時 : バンド練習、個人練習
    店舗 o-- "1" 利用上限人数 : 個人練習
    店舗 --> 練習区分
}

@enduml
