@startuml DomainModel

package スタジオ {
    class スタジオ {
        スタジオID
    }
}

package 機材 {
    class 機材 {
        機材ID
    }

    class 機材在庫数

    機材 o-- "1" 機材在庫数
}

package 会員 {
    class 会員 {
        会員ID
    }

    class 名前
    class 電話番号

    会員 o-- "1" 名前
    会員 o-- "1" 電話番号

    note top of 会員
    非会員を示す会員IDもある。（値が空）
    end note
}

package 予約 {
    class 予約 {
        予約ID
    }

    class 利用時間 {
        開始日時
        利用時間数
    }

    class 利用者情報 {
        利用者名
        利用者電話番号
    }
    利用者情報 o-- "1" 会員

    note bottom of 利用者情報
    会員による予約の場合、会員の情報から生成される。
    非会員による予約の場合、画面で入力された情報から生成される。
    end note

    class 利用人数

    enum 練習区分 {
        バンド練習
        個人練習
    }

    class 利用機材
    class 利用機材数量
    利用機材 --> 機材
    利用機材 o-- "1" 利用機材数量

    予約 --> "1" スタジオ
    予約 o-- "1" 利用時間
    予約 o-- "1" 利用者情報
    予約 o-- "1" 利用人数
    予約 o-- "1" 練習区分
    予約 o-- "0..*" 利用機材

    note top of 予約
    ■ルール
    * 同じ日時に同じスタジオを複数予約できない。
    * 同じ利用する時間帯に利用する機材の余がない場合は予約できない。

    ■排他
    * テーブルロックが必要
    ** 予約の重複を排除する必要があるため。
    * 楽観的排他は行わない
    ** 予約を複数端末で同時に操作することは考えづらいため後勝ちで良いとする。
    end note
}

package 予約設定 {
    class 予約設定

    enum スタート時間区分 {
        0分スタート
        30分スタート
    }

    class 利用上限人数

    class 予約受付開始日時 {
        開始日
        開始日区分
        開始時間
    }
    enum 予約受付開始日区分 {
        日前
        週間前
        ヶ月前
    }
    予約受付開始日時 o-- "1" 予約受付開始日区分

    class 営業時間 {
        開始時間
        終了時間
    }

    予約設定 --> "1" スタジオ
    予約設定 --> "1" 練習区分
    予約設定 o-- "1" スタート時間区分
    予約設定 o-- "1" 利用上限人数
    予約設定 o-- "1" 予約受付開始日時
    予約設定 o-- "1" 営業時間

    note top of 予約設定
    ■予約の状態に関するルール
    * 利用上限人数・・・練習区分ごとに決まる。（個人練習は 2 人。バンド練習は上限なし。）
    * スタート時間・・・スタジオごとに決まる。（0 分スタート or 30 分スタート
    * 予約受付開始日時・・・練習区分ごとに決まる。（個人練習は前日 21 時から。バンド練習は 2 ヶ月前から。）
    * 利用可能時間・・・店舗ごとに決まる。（営業時間内。24 時間営業もあり。）
    ---
    スタジオID、練習区分から取得する。
    end note
}

@enduml
